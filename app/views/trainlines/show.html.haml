%script{:type => "text/javascript", :src => "http://maps.google.com/maps/api/js?sensor=true"}
%script{:type => "text/javascript", :src => "http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/src/markerclusterer.js"}
:javascript
  function place_no_geocode(position, title)
  {
    var marker = new google.maps.Marker({ position: position, title: title });
    markers.push(marker);
    counter++;
  };

  function draw_line(points, map) {
    var line = new google.maps.Polyline({
      path: points,
      strokeColor: "#FF0000",
      strokeOpacity: 1.0,
      strokeWeight: 2
    });

    line.setMap(map);
  }

- @marker_count = 0
- @my_points = ""
- @my_routes_as_lines = ""
- @geocoded_routes.each do |route|
  - route_line = ""
  - route.each do |stop|
    - position = "new google.maps.LatLng(#{stop[0]}, #{stop[1]})"
    - if stop[2] == true
      - @my_points = "#{@my_points}\n place_no_geocode(#{position}, '#{stop[3]}');"
      - @marker_count = @marker_count + 1
    - if route_line.empty?
      - route_line = "#{position}"
    - else
      - route_line = "#{route_line},#{position}"
  - @my_routes_as_lines = "#{@my_routes_as_lines}\ndraw_line([#{route_line}],map);"
:javascript
  var map;
  var mc = null;
  var markers = [];
  var counter = 0 ;
  var done = #{@marker_count} ;
  var created ;
 
  function initialize() {
    var latlng = new google.maps.LatLng(-23.7002104, 133.8806114);
    var myOptions = {
      zoom: 3,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.TERRAIN
    };

    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

    
    #{@my_points.to_s}
    created = setInterval(create_marker_cluster, 1000)
    #{@my_routes_as_lines.to_s}
  } ;

  function create_marker_cluster()
  {
    if (counter == done)
    {
      clearInterval ( created );
      mc = new MarkerClusterer(map, markers);
    }
  };
%body{:onload => "initialize()"}
  - discontinued = ""
  - unless @route.discontinued.nil?
    - discontinued = " [discontinued]"
  - if @route.name.nil?
    =render :partial => '/header', :locals => {:text => (link_to "Unnamed Route#{discontinued}", edit_trainline_path(@route.id))}
  - else
    =render :partial => '/header', :locals => {:text => "#{@route.name}#{discontinued}"}
  #map_canvas
  =render :partial => '/route_footer', :locals => {:id => @route.id, :discontinued => !@route.discontinued.nil?}